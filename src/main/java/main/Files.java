package main;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;

public class Files {
	
	public static BufferedReader getReader(String name, AltPaths a, Logger log) throws FileNotFoundException{
		FileInputStream fstream=null;
		
		
		int attempts = 0;
		// try all possible locations
		while(attempts<=a.paths.size()){
			
			fstream = getStream(a.paths.get(attempts++) + name);
			// found?
			if(fstream!= null){
				DataInputStream in = new DataInputStream(fstream);
				BufferedReader br = new BufferedReader(new InputStreamReader(in));
				return br;
			}
		}
		throw new FileNotFoundException("File: "+name+" not found on any of given locations");	
	}
	
	private static FileInputStream getStream(String fileName){
		try {
			return new FileInputStream(fileName);
		} catch (FileNotFoundException e) {
			return null;
		}
	}
	
	public static BufferedWriter getWriter(String name, Logger log)
			throws FileNotFoundException, IOException{
		BufferedWriter bw = null;
        try {
            //Construct the BufferedWriter object
            bw = new BufferedWriter(new FileWriter(name));
            //Start writing to the output stream
            bw.write("% File generated by nTex - Java Application for fast notes in LaTeX\n% by Jarda Vitku");
            bw.newLine();
            bw.newLine();
        } catch (FileNotFoundException ex) {
            //ex.printStackTrace();
        	log.err("could not open the file: "+name);
        	throw ex;
        } catch (IOException ex) {
            //ex.printStackTrace();
        	log.err("could not write to file: "+name);
        	throw ex;
        }
        return bw;
	}
	
	public static void flushWriter(BufferedWriter bw, Logger log){
		//Close the BufferedWriter
        try {
            if (bw != null) {
                bw.flush();
                bw.close();
            }
        } catch (IOException ex) {
        	log.err("some problem when closing file .. ");
            //ex.printStackTrace();
        }
	}
	
	public static void writeLine(BufferedWriter wr, String line, Logger log){
		try {
			wr.write(line);
			wr.newLine();
		} catch (IOException e) {
			log.err("could not write to output writer");
		}
	}
	

}
